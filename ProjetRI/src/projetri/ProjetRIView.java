/*
 * ProjetRIView.java
 */
package projetri;

import extractor.Extractor;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The application's main frame.
 */
public class ProjetRIView extends FrameView {

    public ProjetRIView(SingleFrameApplication app) {
        super(app);

        // init
        initComponents();
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = ProjetRIApp.getApplication().getMainFrame();
            aboutBox = new ProjetRIAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        ProjetRIApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        startExtract = new javax.swing.JButton();
        showIndexBrut = new javax.swing.JButton();
        showIndexWord = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        fileChoose = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(projetri.ProjetRIApp.class).getContext().getResourceMap(ProjetRIView.class);
        startExtract.setText(resourceMap.getString("startExtract.text")); // NOI18N
        startExtract.setName("startExtract"); // NOI18N
        startExtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startExtractActionPerformed(evt);
            }
        });

        showIndexBrut.setText(resourceMap.getString("showIndexBrut.text")); // NOI18N
        showIndexBrut.setEnabled(false);
        showIndexBrut.setName("showIndexBrut"); // NOI18N
        showIndexBrut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndexBrutActionPerformed(evt);
            }
        });

        showIndexWord.setText(resourceMap.getString("showIndexWord.text")); // NOI18N
        showIndexWord.setEnabled(false);
        showIndexWord.setName("showIndexWord"); // NOI18N
        showIndexWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndexWordActionPerformed(evt);
            }
        });

        progressBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        progressBar.setName("progressBar"); // NOI18N

        fileChoose.setText(resourceMap.getString("fileChoose.text")); // NOI18N
        fileChoose.setName("fileChoose"); // NOI18N
        fileChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startExtract, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(showIndexWord, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(showIndexBrut, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(fileChoose, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileChoose, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startExtract, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showIndexBrut, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showIndexWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        aboutMenuItem.setText(resourceMap.getString("aboutMenuItem.text")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        JOptionPane.showMessageDialog(
                this.mainPanel,
                APP_NAME + " : MichaelJeremyMickael\n"
                + "Michael BARD <m.bard.pro@gmail.com> \n"
                + "Mickaël LHOSTE <mickael.lhoste@gmail.com>\n"
                + "Jérèmy REYNARD <jeremy.reynard.42@gmail.com>",
                "- About -",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void fileChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooseActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        int returnVal = chooser.showOpenDialog(this.mainPanel);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            this.dirPath = chooser.getSelectedFile().getAbsolutePath();
            this.startExtract.setEnabled(true);
        }
    }//GEN-LAST:event_fileChooseActionPerformed

    private void startExtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startExtractActionPerformed
        this.showIndexBrut.setEnabled(false);
        this.showIndexWord.setEnabled(false);

        this.progressBar.setValue(5);

        // add all the files in the selected directory to list
        Path directory = Paths.get(this.dirPath);
        String[] totalFilesList = directory.toFile().list();
        Arrays.sort(totalFilesList);

        String[] filesList = null;

        // automatic listing 1, 12, 123, 1234, 12345
        for (int i = 0; i < totalFilesList.length; ++i) {
            filesList = new String[i + 1];
            for (int j = 0; j < (i + 1); ++j) {
                filesList[j] = totalFilesList[j];
            }
            this.extractor = new Extractor(this.dirPath, filesList);
            this.extractor.extract();
        }

        this.showIndexBrut.setEnabled(true);
        this.showIndexWord.setEnabled(true);

        this.progressBar.setValue(100);
    }//GEN-LAST:event_startExtractActionPerformed

    private void showIndexBrutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showIndexBrutActionPerformed
        if (this.extractor != null) {
            JOptionPane.showMessageDialog(
                    this.mainPanel,
                    this.extractor.showResults(),
                    "Stats",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_showIndexBrutActionPerformed

    private void showIndexWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showIndexWordActionPerformed
        String word = JOptionPane.showInputDialog(
                this.mainPanel,
                "Mot à chercher : ",
                "Index à partir d'un mot",
                JOptionPane.QUESTION_MESSAGE);

        if (word != null) {
            JOptionPane.showMessageDialog(
                    this.mainPanel,
                    this.extractor.showResults(word),
                    "Mot : " + word,
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_showIndexWordActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        if (JOptionPane.showConfirmDialog(
                this.mainPanel,
                "Do you really want to close " + APP_NAME + "?",
                "- Close -",
                JOptionPane.YES_NO_OPTION) == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMenuItemActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fileChoose;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton showIndexBrut;
    private javax.swing.JButton showIndexWord;
    private javax.swing.JButton startExtract;
    // End of variables declaration//GEN-END:variables
    private JDialog aboutBox;
    private String dirPath = "/home/mlh/Documents/FAC/M2-S1/IR/Projet/files/";
    private Extractor extractor;
    private final String APP_NAME = "Indexator&atravers";
}
